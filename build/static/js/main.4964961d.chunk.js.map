{"version":3,"sources":["apis/jsonPlaceholder.js","actions/index.js","components/UserHeader.js","components/PostList.js","components/App.js","reducers/index.js","reducers/postsReducers.js","reducers/usersReducer.js","index.js"],"names":["axios","create","baseURL","fetchPosts","dispatch","a","jsonPlaceholder","get","response","type","payload","data","fetchUser","id","UserHeader","user","this","props","className","name","Component","connect","state","ownProps","users","find","userId","PostList","fetchPostsAndUsers","posts","map","post","title","body","renderList","getState","_","uniq","forEach","App","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"mPAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,0C,iBCOAC,EAAa,yDAAO,WAAMC,GAAN,eAAAC,EAAA,sEACFC,EAAgBC,IAAI,SADlB,OACnBC,EADmB,OAGzBJ,EAAS,CACLK,KAAM,cACNC,QAASF,EAASG,OALG,2CAAP,uDASbC,EAAY,SAACC,GAAD,8CAAQ,WAAMT,GAAN,eAAAC,EAAA,sEAENC,EAAgBC,IAAhB,gBAA6BM,IAFvB,OAEvBL,EAFuB,OAI7BJ,EAAS,CAAEK,KAAM,aAAcC,QAASF,EAASG,OAJpB,2CAAR,uDChBnBG,E,uKAEQ,IACEC,EAASC,KAAKC,MAAdF,KAER,OAAIA,EAIG,qBAAKG,UAAU,SAAf,SAAyBH,EAAKI,OAH1B,S,GANMC,aAiBVC,eAJS,SAACC,EAAOC,GAC5B,MAAO,CAAER,KAAMO,EAAME,MAAMC,MAAK,SAAAV,GAAI,OAAIA,EAAKF,KAAOU,EAASG,aAGlDL,CAAyBP,GCflCa,E,kLAEEX,KAAKC,MAAMW,uB,mCAIX,OAAOZ,KAAKC,MAAMY,MAAMC,KAAI,SAAAC,GACxB,OACI,sBAAKb,UAAU,OAAf,UACI,mBAAGA,UAAU,mCACb,sBAAKA,UAAU,UAAf,UACI,sBAAKA,UAAU,cAAf,UACI,6BAAKa,EAAKC,QACV,4BAAID,EAAKE,UAEb,cAAC,EAAD,CAAYP,OAAQK,EAAKL,cAPNK,EAAKlB,S,+BAexC,OAAO,qBAAKK,UAAU,0BAAf,SAA0CF,KAAKkB,mB,GAvBvCd,aA+BRC,eAJS,SAACC,GACrB,MAAO,CAAEO,MAAOP,EAAMO,SAGc,CAAED,mBFjCR,yDAAM,WAAOxB,EAAU+B,GAAjB,SAAA9B,EAAA,sEAC9BD,EAASD,KADqB,OAGpBiC,IAAEC,KAAKD,IAAEN,IAAIK,IAAWN,MAAO,WACvCS,SAAQ,SAAAzB,GAAE,OAAIT,EAASQ,EAAUC,OAJL,2CAAN,0DEiCnBQ,CAAiDM,GCzBjDY,MARf,WACI,OACQ,qBAAKrB,UAAU,eAAf,SACI,cAAC,EAAD,O,QCFDsB,cAAgB,CAC3BX,MCLW,WAAyB,IAAxBP,EAAuB,uDAAf,GAAImB,EAAW,uCACnC,OAAOA,EAAOhC,MACV,IAAK,cACD,OAAOgC,EAAO/B,QAElB,QACI,OAAOY,IDAfE,MENW,WAAyB,IAAxBF,EAAuB,uDAAf,GAAImB,EAAW,uCACnC,OAAQA,EAAOhC,MACX,IAAK,aACD,MAAM,GAAN,mBAAWa,GAAX,CAAkBmB,EAAO/B,UAE7B,QACI,OAAOY,MCGboB,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACL,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACI,cAAC,EAAD,MAEJO,SAASC,cAAc,Y","file":"static/js/main.4964961d.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://jsonplaceholder.typicode.com/'\r\n})","import jsonPlaceholder from '../apis/jsonPlaceholder';\r\nimport _ from 'lodash';\r\n\r\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\r\n    await dispatch(fetchPosts());\r\n\r\n    const userIds = _.uniq(_.map(getState().posts, 'userId'));\r\n    userIds.forEach(id => dispatch(fetchUser(id)));\r\n}\r\n\r\nexport const fetchPosts = () =>  async dispatch => {\r\n        const response = await jsonPlaceholder.get('posts')\r\n\r\n        dispatch({\r\n            type: 'FETCH_POSTS',\r\n            payload: response.data\r\n        })\r\n    }\r\n\r\nexport const fetchUser = (id) => async dispatch => {\r\n\r\n    const response = await jsonPlaceholder.get(`users/${id}`);\r\n\r\n    dispatch({ type: 'FETCH_USER', payload: response.data})\r\n};\r\n\r\n\r\n// const _fetchUser = _.memoize(async (id, dispatch) => {\r\n//     const response = await jsonPlaceholder.get(`users/${id}`);\r\n\r\n//     dispatch({ type: 'FETCH_USER', payload: response.data})\r\n// });\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass UserHeader extends Component {\r\n\r\n    render() {\r\n        const { user } = this.props;\r\n\r\n        if(!user) {\r\n            return null\r\n        }\r\n\r\n        return <div className=\"header\">{user.name}</div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { user: state.users.find(user => user.id === ownProps.userId)}\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserHeader);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPostsAndUsers } from '../actions';\r\nimport UserHeader from './UserHeader';\r\n\r\nclass PostList extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchPostsAndUsers();\r\n    }\r\n\r\n    renderList() {\r\n        return this.props.posts.map(post => {\r\n            return (\r\n                <div className=\"item\" key={post.id}>\r\n                    <i className=\"large middle aligned icon user\"/>\r\n                    <div className=\"content\">\r\n                        <div className=\"description\">\r\n                            <h2>{post.title}</h2>\r\n                            <p>{post.body}</p>\r\n                        </div>\r\n                        <UserHeader userId={post.userId}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"ui relaxed divided list\">{this.renderList()}</div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { posts: state.posts}\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchPostsAndUsers })(PostList);","import React from 'react';\r\nimport PostList from './PostList';\r\n\r\nfunction App() {\r\n    return (\r\n            <div className=\"ui container\">\r\n                <PostList />\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\nimport postsReducer from './postsReducers';\r\nimport usersReducer from './usersReducer'\r\n\r\nexport default combineReducers({\r\n    posts: postsReducer,\r\n    users: usersReducer\r\n});","export default (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_POSTS':\r\n            return action.payload;\r\n        \r\n        default: \r\n            return state;\r\n    }\r\n\r\n}","export default (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_USER': \r\n            return [...state, action.payload];\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk'\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk))\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n)"],"sourceRoot":""}